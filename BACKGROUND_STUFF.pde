class TREE {
  float x, y;
  color c1, c2;
  float a;
  float s;
  TREE(float _x, float _y, color _c1, color _c2, float _a, float _s) {
    x=_x;
    y=_y;
    c1=_c1;
    c2=_c2;
    a=_a;
    s=_s;
  }
  void update() {
    fill(c2);
    rect(x-10*s-cameraX*a, y, 20*s, 90*s);
    fill(c1);
    ellipse(x-cameraX*a, y, 50*s, 50*s);
  }
}

class MOUNTAIN {
  float x, y, a;
  MOUNTAIN(float _x, float _y, float _a) {
    x=_x;
    y=_y;
    a=_a;
  }
  void update() {
    fill(#006600);
    triangle(x-cameraX*a, y, x-200-cameraX*a, y+300, x+200-cameraX*a, y+300);
  }
}

class BLACK {
  int cx, cy; 
  float d=1;
  float a;
  BLACK(int _cx, int _cy, float _a) {
    cx=_cx;
    cy=_cy;
    a=_a;
  }
  void update() {
    fill(#8E8C8C);
    ellipse(cx-cameraX*a, cy, 20*d, 20*d);
    ellipse(cx+10-cameraX*a, cy, 20*d, 20*d);
    ellipse(cx+20-cameraX*a, cy, 20*d, 20*d);
    ellipse(cx+5-cameraX*a, cy-10, 20*d, 20*d);
    ellipse(cx+15-cameraX*a, cy-10, 20*d, 20*d);
  }
}


class BG {
  int x, type;

  BG(int _x, int _type) {
    x = _x;
    type = _type;
  }
  void update() {
    FadeX=FadeX-2;
    if (FadeX<=0) {
      FadeX = 255;
    }


    if (type == 1) {
      noStroke();
      fill(#05145F); //darker blue
      ellipse(20+(300*x)-cameraX*scroll3, 230, 110, 200);
      ellipse(100+(300*x)-cameraX*scroll3, 210, 150, 150);
      ellipse(210+(300*x)-cameraX*scroll3, 230, 125, 130);
      ellipse(300+(300*x)-cameraX*scroll3, 270, 140, 135);
      ellipse(395+(300*x)-cameraX*scroll3, 290, 85, 100);
      ellipse(460+(300*x)-cameraX*scroll3, 290, 100, 120);
      ellipse(520+(300*x)-cameraX*scroll3, 290, 110, 100);
      ellipse(620+(300*x)-cameraX*scroll3, 290, 150, 150);
      rect(0+(300*x)-cameraX*scroll3, 260, 640, 220);
      fill(#0D3481); //dark blue
      ellipse(10+(300*x)-cameraX*scroll3, 400, 90, 200);
      ellipse(100+(300*x)-cameraX*scroll3, 360, 140, 150);
      ellipse(180+(300*x)-cameraX*scroll3, 380, 90, 80);
      ellipse(240+(300*x)-cameraX*scroll3, 410, 80, 80);
      ellipse(350+(300*x)-cameraX*scroll3, 400, 170, 160);
      ellipse(470+(300*x)-cameraX*scroll3, 420, 120, 125);
      ellipse(600+(300*x)-cameraX*scroll3, 400, 220, 200);
      rect(0+(300*x)-cameraX*scroll3, 400, 640, 80);

      fill(#ffffff, 100); //stars
      noStroke();
      ellipse(15+(300*x)-cameraX*scroll3, 200, 3, 3);
      ellipse(25+(300*x)-cameraX*scroll3, 160, 2.5, 2.5);
      ellipse(35+(300*x)-cameraX*scroll3, 158, 2.5, 2.5);
      ellipse(50+(300*x)-cameraX*scroll3, 30, 2.5, 2.5);
      ellipse(30+(300*x)-cameraX*scroll3, 400, 2.5, 2.5);
      ellipse(100+(300*x)-cameraX*scroll3, 180, 2.5, 2.5);
      ellipse(500+(300*x)-cameraX*scroll3, 475, 2.5, 2.5);
      ellipse(635+(300*x)-cameraX*scroll3, 430, 2.5, 2.5);
      ellipse(600+(300*x)-cameraX*scroll3, 100, 3, 3);
      ellipse(480+(300*x)-cameraX*scroll3, 80, 3, 3);
      ellipse(470+(300*x)-cameraX*scroll3, 60, 3, 3);
      ellipse(350+(300*x)-cameraX*scroll3, 60, 3, 3);
      ellipse(340+(300*x)-cameraX*scroll3, 360, 3, 3);
      ellipse(320+(300*x)-cameraX*scroll3, 300, 3, 3);
      ellipse(250+(300*x)-cameraX*scroll3, 220, 2.5, 2.5);
      ellipse(200+(300*x)-cameraX*scroll3, 450, 3, 3);
      fill(#ffffff, 50);
      ellipse(20+(300*x)-cameraX*scroll3, 430, 4, 4);
      ellipse(320+(300*x)-cameraX*scroll3, 240, 4, 4);
      ellipse(330+(300*x)-cameraX*scroll3, 230, 4, 4);
      ellipse(360+(300*x)-cameraX*scroll3, 280, 3, 3);
      ellipse(100+(300*x)-cameraX*scroll3, 90, 3, 3);
      ellipse(125+(300*x)-cameraX*scroll3, 80, 3, 3);
      ellipse(620+(300*x)-cameraX*scroll3, 180, 3, 3);
      ellipse(570+(300*x)-cameraX*scroll3, 160, 3, 3);
      ellipse(550+(300*x)-cameraX*scroll3, 260, 4, 4);
      ellipse(520+(300*x)-cameraX*scroll3, 380, 4, 4);
      fill(#ffffff, 20);
      ellipse(80+(300*x)-cameraX*scroll3, 360, 4, 4);
      ellipse(50+(300*x)-cameraX*scroll3, 280, 4, 4);
      ellipse(70+(300*x)-cameraX*scroll3, 20, 4, 4);
      ellipse(110+(300*x)-cameraX*scroll3, 50, 4, 4);
      ellipse(170+(300*x)-cameraX*scroll3, 250, 4, 4);
      ellipse(190+(300*x)-cameraX*scroll3, 190, 4, 4);
      ellipse(230+(300*x)-cameraX*scroll3, 90, 4, 4);
      ellipse(300+(300*x)-cameraX*scroll3, 120, 4, 4);
      ellipse(300+(300*x)-cameraX*scroll3, 420, 4, 4);
      ellipse(400+(300*x)-cameraX*scroll3, 30, 4, 4);
      ellipse(390+(300*x)-cameraX*scroll3, 460, 4, 4);
      ellipse(430+(300*x)-cameraX*scroll3, 450, 4, 4);
      ellipse(500+(300*x)-cameraX*scroll3, 10, 4, 4);
      ellipse(550+(300*x)-cameraX*scroll3, 30, 4, 4);
      ellipse(600+(300*x)-cameraX*scroll3, 410, 4, 4);
      ellipse(625+(300*x)-cameraX*scroll3, 360, 4, 4);
      ellipse(500+(300*x)-cameraX*scroll3, 320, 4, 4);
      ellipse(450+(300*x)-cameraX*scroll3, 300, 4, 4);
      ellipse(400+(300*x)-cameraX*scroll3, 180, 4, 4);




      fill(#ffffff, FadeX);
      ellipse(60+(300*x)-cameraX, 120, 3, 3);
      ellipse(140+(300*x)-cameraX, 420, 4, 4);
      ellipse(340+(300*x)-cameraX, 20, 3, 3);
      ellipse(400+(300*x)-cameraX, 220, 4, 4);
      ellipse(600+(300*x)-cameraX, 310, 4, 4);
      ellipse(220+(300*x)-cameraX, 40, 2, 2);
      ellipse(260+(300*x)-cameraX, 320, 2, 2);
      ellipse(420+(300*x)-cameraX, 400, 2, 2);
    }



    if (type == 2) {
      fill(#EDA04D, 200);
      noStroke();
      ellipse(320+(300*x)-cameraX*scroll4, 280, 420, 280);
      fill(#F0A861, 100);
      noStroke();
      ellipse(320+(300*x)-cameraX*scroll3, 290, 750, 100);
      fill(#A57D55);
      noStroke();
      rect(-10+(300*x)-cameraX*scroll5, 270, 60, 40, 50);
      rect(30+(300*x)-cameraX*scroll5, 260, 40, 40, 50);
      ellipse(80+(300*x)-cameraX*scroll5, 280, 80, 30);
      rect(100+(300*x)-cameraX*scroll5, 270, 100, 40, 50);
      ellipse(170+(300*x)-cameraX*scroll5, 270, 50, 30);
      rect(190+(300*x)-cameraX*scroll5, 240, 50, 80, 50);
      ellipse(260+(300*x)-cameraX*scroll5, 270, 100, 50);
      rect(300+(300*x)-cameraX*scroll5, 240, 100, 100, 20);
      rect(340+(300*x)-cameraX*scroll5, 220, 40, 30, 20);
      ellipse(430+(300*x)-cameraX*scroll5, 270, 80, 80);
      rect(390+(300*x)-cameraX*scroll5, 270, 60, 40, 50);
      rect(430+(300*x)-cameraX*scroll5, 260, 40, 40, 50);
      ellipse(480+(300*x)-cameraX*scroll5, 280, 80, 30);
      rect(500+(300*x)-cameraX*scroll5, 270, 100, 40, 50);
      ellipse(570+(300*x)-cameraX*scroll5, 270, 50, 30);
      rect(500+(300*x)-cameraX*scroll5, 260, 100, 40, 50);
      ellipse(570+(300*x)-cameraX*scroll5, 260, 50, 30);
      rect(590+(300*x)-cameraX*scroll5, 230, 50, 80, 50);
      ellipse(660+(300*x)-cameraX*scroll5, 260, 100, 50);
      rect(700+(300*x)-cameraX*scroll5, 230, 100, 100, 20);

      fill(#BC8D5D);
      ellipse(30+(300*x)-cameraX*scroll3, 300, 60, 40);
      rect(60+(300*x)-cameraX*scroll3, 250, 70, 90, 30);
      ellipse(150+(300*x)-cameraX*scroll3, 300, 60, 60);
      ellipse(210+(300*x)-cameraX*scroll3, 295, 110, 50);
      rect(250+(300*x)-cameraX*scroll3, 210, 80, 120, 30);
      ellipse(350+(300*x)-cameraX*scroll3, 300, 100, 100);
      rect(380+(300*x)-cameraX*scroll3, 270, 80, 80, 30);
      ellipse(470+(300*x)-cameraX*scroll3, 280, 50, 100);
      ellipse(520+(300*x)-cameraX*scroll3, 300, 100, 60);
      rect(560+(300*x)-cameraX*scroll3, 250, 70, 90, 30);
      ellipse(650+(300*x)-cameraX*scroll3, 290, 70, 70);
      fill(#5F3725);
      beginShape();
      vertex(90+(300*x)-cameraX*scroll3, 310);
      vertex(105+(300*x)-cameraX*scroll3, 265);
      vertex(155+(300*x)-cameraX*scroll3, 265);
      vertex(160+(300*x)-cameraX*scroll3, 280);
      vertex(165+(300*x)-cameraX*scroll3, 290);
      vertex(170+(300*x)-cameraX*scroll3, 310);
      endShape(CLOSE);
      beginShape();
      vertex(380+(300*x)-cameraX*scroll3, 310);
      vertex(390+(300*x)-cameraX*scroll3, 275);
      vertex(400+(300*x)-cameraX*scroll3, 260);
      vertex(405+(300*x)-cameraX*scroll3, 245);
      vertex(455+(300*x)-cameraX*scroll3, 245);
      vertex(470+(300*x)-cameraX*scroll3, 310);
      endShape(CLOSE);
      fill(#7C4E39);
      ellipse(130+(300*x)-cameraX*scroll3, 265, 50, 15);
      ellipse(430+(300*x)-cameraX*scroll3, 245, 50, 15);
      fill(#502B1A);
      ellipse(130+(300*x)-cameraX*scroll3, 266, 40, 8);
      ellipse(430+(300*x)-cameraX*scroll3, 246, 40, 8);
      fill(#74302C);
      beginShape();
      vertex(4+(300*x)-cameraX*scroll3, 300);
      vertex(2+(300*x)-cameraX*scroll3, 270);
      vertex(4+(300*x)-cameraX*scroll3, 270);
      vertex(4+(300*x)-cameraX*scroll3, 230);
      vertex(62+(300*x)-cameraX*scroll3, 230);
      vertex(72+(300*x)-cameraX*scroll3, 260);
      vertex(82+(300*x)-cameraX*scroll3, 300);
      endShape(CLOSE);
      beginShape();
      vertex(210+(300*x)-cameraX*scroll3, 300);
      vertex(220+(300*x)-cameraX*scroll3, 260);
      vertex(240+(300*x)-cameraX*scroll3, 230);
      vertex(310+(300*x)-cameraX*scroll3, 230);
      vertex(330+(300*x)-cameraX*scroll3, 260);
      vertex(340+(300*x)-cameraX*scroll3, 300);
      endShape(CLOSE);
      beginShape();
      vertex(510+(300*x)-cameraX*scroll3, 300);
      vertex(520+(300*x)-cameraX*scroll3, 250);
      vertex(535+(300*x)-cameraX*scroll3, 230);
      vertex(540+(300*x)-cameraX*scroll3, 195);
      vertex(620+(300*x)-cameraX*scroll3, 200);
      vertex(630+(300*x)-cameraX*scroll3, 300);
      endShape(CLOSE);
      fill(#9D4A46);
      noStroke();
      ellipse(33+(300*x)-cameraX*scroll3, 230, 58, 15);
      ellipse(275+(300*x)-cameraX*scroll3, 230, 70, 15);
      ellipse(580+(300*x)-cameraX*scroll3, 198, 80, 25);
      fill(#8E433F);
      noStroke();
      ellipse(33+(300*x)-cameraX*scroll3, 229, 58, 11);
      ellipse(275+(300*x)-cameraX*scroll3, 229, 70, 11);
      ellipse(580+(300*x)-cameraX*scroll3, 197, 80, 21);
      fill(#551E1B);
      noStroke();
      ellipse(33+(300*x)-cameraX*scroll3, 228, 42, 6);
      ellipse(275+(300*x)-cameraX*scroll3, 228, 60, 6);
      ellipse(580+(300*x)-cameraX*scroll3, 197, 60, 12);
      fill(#310B09);
      noStroke();
      beginShape();
      vertex(330+(300*x)-cameraX*scroll3, 265);
      vertex(330+(300*x)-cameraX*scroll3, 310);
      vertex(640+(300*x)-cameraX*scroll3, 290);
      endShape(CLOSE);
      fill(#834D4A);
      beginShape();
      vertex(0+(300*x)-cameraX*scroll3, 300);
      vertex(330+(300*x)-cameraX*scroll3, 265);
      vertex(310+(300*x)-cameraX*scroll3, 310);
      endShape(CLOSE);
      fill(#5A2624);
      noStroke();
      beginShape();
      vertex(0+(300*x)-cameraX*scroll3, 310);
      vertex(330+(300*x)-cameraX*scroll3, 265);
      vertex(640+(300*x)-cameraX*scroll3, 310);
      endShape(CLOSE);
      fill(#AF3E47);
      beginShape();
      vertex(-20+(300*x)-cameraX*scroll3, 310);
      vertex(15+(300*x)-cameraX*scroll3, 270);
      vertex(60+(300*x)-cameraX*scroll3, 310);
      endShape(CLOSE);
      beginShape();
      vertex(50+(300*x)-cameraX*scroll3, 310);
      vertex(90+(300*x)-cameraX*scroll3, 250);
      vertex(130+(300*x)-cameraX*scroll3, 310);
      endShape(CLOSE);
      beginShape();
      vertex(430+(300*x)-cameraX*scroll3, 310);
      vertex(460+(300*x)-cameraX*scroll3, 250);
      vertex(490+(300*x)-cameraX*scroll3, 270);
      vertex(505+(300*x)-cameraX*scroll3, 260);
      vertex(520+(300*x)-cameraX*scroll3, 310);
      endShape(CLOSE);
      beginShape();
      vertex(480+(300*x)-cameraX*scroll3, 310);
      vertex(530+(300*x)-cameraX*scroll3, 250);
      vertex(560+(300*x)-cameraX*scroll3, 310);
      endShape(CLOSE);
      beginShape();
      vertex(550+(300*x)-cameraX*scroll3, 310);
      vertex(605+(300*x)-cameraX*scroll3, 230);
      vertex(660+(300*x)-cameraX*scroll3, 310);
      endShape(CLOSE);
      fill(#983342);
      beginShape();
      vertex(10+(300*x)-cameraX*scroll3, 310);
      vertex(50+(300*x)-cameraX*scroll3, 270);
      vertex(80+(300*x)-cameraX*scroll3, 310);
      endShape(CLOSE);
      beginShape();
      vertex(120+(300*x)-cameraX*scroll3, 310);
      vertex(250+(300*x)-cameraX*scroll3, 270);
      vertex(270+(300*x)-cameraX*scroll3, 310);
      endShape(CLOSE);
      beginShape();
      vertex(270+(300*x)-cameraX*scroll3, 310);
      vertex(310+(300*x)-cameraX*scroll3, 280);
      vertex(360+(300*x)-cameraX*scroll3, 310);
      endShape(CLOSE);
      beginShape();
      vertex(350+(300*x)-cameraX*scroll3, 310);
      vertex(390+(300*x)-cameraX*scroll3, 290);
      vertex(435+(300*x)-cameraX*scroll3, 310);
      endShape(CLOSE);
      beginShape();
      vertex(500+(300*x)-cameraX*scroll3, 310);
      vertex(560+(300*x)-cameraX*scroll3, 260);
      vertex(610+(300*x)-cameraX*scroll3, 310);
      endShape(CLOSE);
      fill(#7C3A2F);
      rect(0+(300*x)-cameraX*scroll3, 310, 640, 15);
      fill(#6C2D23);
      rect(0+(300*x)-cameraX*scroll3, 325, 640, 8);
      fill(#582779);
      rect(0+(300*x)-cameraX*scroll3, 332, 640, 20);
      fill(#A7544C);
      rect(0+(300*x)-cameraX*scroll3, 350, 640, 80);
      ellipse(20+(300*x)-cameraX*scroll3, 350, 20, 10);
      ellipse(140+(300*x)-cameraX*scroll3, 350, 30, 12);
      ellipse(220+(300*x)-cameraX*scroll3, 352, 25, 10);
      ellipse(260+(300*x)-cameraX*scroll3, 352, 40, 10);
      ellipse(360+(300*x)-cameraX*scroll3, 350, 60, 10);
      ellipse(420+(300*x)-cameraX*scroll3, 350, 60, 10);
      ellipse(520+(300*x)-cameraX*scroll3, 350, 60, 10);
      ellipse(590+(300*x)-cameraX*scroll3, 350, 100, 10);
      fill(#954139);
      rect(0+(300*x)-cameraX*scroll3, 430, 640, 50);
      ellipse(10+(300*x)-cameraX*scroll3, 430, 50, 12);
      ellipse(50+(300*x)-cameraX*scroll3, 430, 30, 10);
      ellipse(90+(300*x)-cameraX*scroll3, 430, 70, 13);
      ellipse(140+(300*x)-cameraX*scroll3, 430, 30, 10);
      ellipse(180+(300*x)-cameraX*scroll3, 430, 50, 13);
      ellipse(220+(300*x)-cameraX*scroll3, 430, 30, 10);
      ellipse(260+(300*x)-cameraX*scroll3, 430, 70, 13);
      ellipse(310+(300*x)-cameraX*scroll3, 430, 30, 10);
      ellipse(340+(300*x)-cameraX*scroll3, 430, 50, 12);
      ellipse(380+(300*x)-cameraX*scroll3, 430, 30, 10);
      ellipse(410+(300*x)-cameraX*scroll3, 430, 50, 12);
      ellipse(450+(300*x)-cameraX*scroll3, 430, 30, 10);
      ellipse(490+(300*x)-cameraX*scroll3, 430, 70, 13);
      ellipse(540+(300*x)-cameraX*scroll3, 430, 30, 10);
      ellipse(580+(300*x)-cameraX*scroll3, 430, 50, 13);
      ellipse(620+(300*x)-cameraX*scroll3, 430, 70, 12);
    }

    

      if (type == 3) {
      fill(#3E3E3E, 100);
      noStroke();
      beginShape();
      vertex(80+(300*x)-cameraX*scroll6, 50);
      vertex(70+(300*x)-cameraX*scroll6, 530);
      vertex(105+(300*x)-cameraX*scroll6, 530);
      vertex(95+(300*x)-cameraX*scroll6, 50);
      endShape(CLOSE);
      beginShape();
      vertex(230+(300*x)-cameraX*scroll6, 50);
      vertex(225+(300*x)-cameraX*scroll6, 530);
      vertex(250+(300*x)-cameraX*scroll6, 530);
      vertex(245+(300*x)-cameraX*scroll6, 50);
      endShape(CLOSE);
      beginShape();
      vertex(380+(300*x)-cameraX*scroll6, 50);
      vertex(370+(300*x)-cameraX*scroll6, 530);
      vertex(410+(300*x)-cameraX*scroll6, 530);
      vertex(395+(300*x)-cameraX*scroll6, 50);
      endShape(CLOSE);
      beginShape();
      vertex(550+(300*x)-cameraX*scroll6, 50);
      vertex(540+(300*x)-cameraX*scroll6, 530);
      vertex(570+(300*x)-cameraX*scroll6, 530);
      vertex(565+(300*x)-cameraX*scroll6, 50);
      endShape(CLOSE);
      fill(#333433); //tree leaves
      ellipse(-10+(300*x)-cameraX*scroll6, 60, 40, 40);
      ellipse(20+(300*x)-cameraX*scroll6, 50, 40, 40);
      ellipse(40+(300*x)-cameraX*scroll6, 60, 40, 40);
      ellipse(60+(300*x)-cameraX*scroll6, 50, 40, 40);
      ellipse(80+(300*x)-cameraX*scroll6, 60, 40, 40);
      ellipse(100+(300*x)-cameraX*scroll6, 60, 40, 40);
      ellipse(120+(300*x)-cameraX*scroll6, 70, 40, 40);
      ellipse(140+(300*x)-cameraX*scroll6, 50, 40, 40);
      ellipse(160+(300*x)-cameraX*scroll6, 60, 40, 40);
      ellipse(180+(300*x)-cameraX*scroll6, 50, 40, 40);
      ellipse(220+(300*x)-cameraX*scroll6, 50, 40, 40);
      ellipse(240+(300*x)-cameraX*scroll6, 60, 40, 40);
      ellipse(260+(300*x)-cameraX*scroll6, 50, 40, 40);
      ellipse(280+(300*x)-cameraX*scroll6, 60, 40, 40);
      ellipse(300+(300*x)-cameraX*scroll6, 60, 40, 40);
      ellipse(320+(300*x)-cameraX*scroll6, 70, 40, 40);
      ellipse(340+(300*x)-cameraX*scroll6, 50, 40, 40);
      ellipse(360+(300*x)-cameraX*scroll6, 60, 40, 40);
      ellipse(460+(300*x)-cameraX*scroll6, 50, 40, 40);
      ellipse(480+(300*x)-cameraX*scroll6, 60, 40, 40);
      ellipse(400+(300*x)-cameraX*scroll6, 60, 40, 40);
      ellipse(420+(300*x)-cameraX*scroll6, 70, 40, 40);
      ellipse(440+(300*x)-cameraX*scroll6, 50, 40, 40);
      ellipse(560+(300*x)-cameraX*scroll6, 60, 40, 40);
      ellipse(560+(300*x)-cameraX*scroll6, 50, 40, 40);
      ellipse(580+(300*x)-cameraX*scroll6, 60, 40, 40);
      ellipse(500+(300*x)-cameraX*scroll6, 60, 40, 40);
      ellipse(520+(300*x)-cameraX*scroll6, 70, 40, 40);
      ellipse(540+(300*x)-cameraX*scroll6, 50, 40, 40);
      ellipse(560+(300*x)-cameraX*scroll6, 60, 40, 40);
      ellipse(580+(300*x)-cameraX*scroll6, 50, 40, 40);
      ellipse(600+(300*x)-cameraX*scroll6, 60, 40, 40);
      ellipse(620+(300*x)-cameraX*scroll6, 70, 40, 40);
      ellipse(640+(300*x)-cameraX*scroll6, 50, 40, 40);
      fill(#3E3E3E, 100);
      stroke(#3E3E3E, 100);
      strokeWeight(6);
      line(97+(300*x)-cameraX*scroll6, 150, 120+(300*x)-cameraX*scroll6, 50);
      line(227+(300*x)-cameraX*scroll6, 200, 200+(300*x)-cameraX*scroll6, 50);
      strokeWeight(7);
      line(246+(300*x)-cameraX*scroll6, 140, 280+(300*x)-cameraX*scroll6, 50);
      line(375+(300*x)-cameraX*scroll6, 180, 350+(300*x)-cameraX*scroll6, 50);
      line(364+(300*x)-cameraX*scroll6, 90, 376+(300*x)-cameraX*scroll6, 120);
      line(400+(300*x)-cameraX*scroll6, 150, 440+(300*x)-cameraX*scroll6, 50);
      line(545+(300*x)-cameraX*scroll6, 170, 500+(300*x)-cameraX*scroll6, 100);
      line(510+(300*x)-cameraX*scroll6, 110, 525+(300*x)-cameraX*scroll6, 90);
      line(566+(300*x)-cameraX*scroll6, 130, 600+(300*x)-cameraX*scroll6, 60);
      fill(#3E3E3E, 180);
      noStroke();
      beginShape();
      vertex(130+(300*x)-cameraX*scroll6, 50);
      vertex(125+(300*x)-cameraX*scroll6, 530);
      vertex(160+(300*x)-cameraX*scroll6, 530);
      vertex(150+(300*x)-cameraX*scroll6, 50);
      endShape(CLOSE);
      beginShape();
      vertex(310+(300*x)-cameraX*scroll6, 50);
      vertex(305+(300*x)-cameraX*scroll6, 530);
      vertex(330+(300*x)-cameraX*scroll6, 530);
      vertex(340+(300*x)-cameraX*scroll6, 50);
      endShape(CLOSE);
      beginShape();
      vertex(480+(300*x)-cameraX*scroll6, 50);
      vertex(475+(300*x)-cameraX*scroll6, 530);
      vertex(510+(300*x)-cameraX*scroll6, 530);
      vertex(500+(300*x)-cameraX*scroll6, 50);
      endShape(CLOSE);
      fill(#3E3E3E, 160);
      stroke(#3E3E3E, 180);
      strokeWeight(8);
      line(126+(300*x)-cameraX*scroll6, 180, 95+(300*x)-cameraX*scroll6, 50);
      line(152+(300*x)-cameraX*scroll6, 130, 172+(300*x)-cameraX*scroll6, 50);
      line(306+(300*x)-cameraX*scroll6, 140, 270+(300*x)-cameraX*scroll6, 50);
      line(340+(300*x)-cameraX*scroll6, 160, 355+(300*x)-cameraX*scroll6, 130);
      line(504+(300*x)-cameraX*scroll6, 150, 540+(300*x)-cameraX*scroll6, 130);
      line(478+(300*x)-cameraX*scroll6, 170, 450+(300*x)-cameraX*scroll6, 140);
      line(449+(300*x)-cameraX*scroll6, 134, 449+(300*x)-cameraX*scroll6, 50);
      fill(#383938);
      noStroke();
      beginShape();
      vertex(30+(300*x)-cameraX*scroll6, 50);
      vertex(20+(300*x)-cameraX*scroll6, 530);
      vertex(55+(300*x)-cameraX*scroll6, 530);
      vertex(50+(300*x)-cameraX*scroll6, 50);
      endShape(CLOSE);
      beginShape();
      vertex(190+(300*x)-cameraX*scroll6, 50);
      vertex(185+(300*x)-cameraX*scroll6, 530);
      vertex(225+(300*x)-cameraX*scroll6, 530);
      vertex(215+(300*x)-cameraX*scroll6, 50);
      endShape(CLOSE);
      beginShape();
      vertex(430+(300*x)-cameraX*scroll6, 50);
      vertex(425+(300*x)-cameraX*scroll6, 530);
      vertex(465+(300*x)-cameraX*scroll6, 530);
      vertex(460+(300*x)-cameraX*scroll6, 50);
      endShape(CLOSE);
      beginShape();
      vertex(610+(300*x)-cameraX*scroll6, 50);
      vertex(595+(300*x)-cameraX*scroll6, 530);
      vertex(635+(300*x)-cameraX*scroll6, 530);
      vertex(630+(300*x)-cameraX*scroll6, 50);
      endShape(CLOSE);
      fill(#383938);
      stroke(#383938);
      strokeWeight(10);
      line(50+(300*x)-cameraX*scroll6, 150, 80+(300*x)-cameraX*scroll6, 140);
      line(80+(300*x)-cameraX*scroll6, 140, 85+(300*x)-cameraX*scroll6, 50);
      line(85+(300*x)-cameraX*scroll6, 80, 110+(300*x)-cameraX*scroll6, 50);
      line(40+(300*x)-cameraX*scroll6, 130, 10+(300*x)-cameraX*scroll6, 110);
      line(10+(300*x)-cameraX*scroll6, 110, 5+(300*x)-cameraX*scroll6, 50);
      strokeWeight(12);
      line(190+(300*x)-cameraX*scroll6, 110, 180+(300*x)-cameraX*scroll6, 90);
      line(180+(300*x)-cameraX*scroll6, 90, 130+(300*x)-cameraX*scroll6, 50);
      line(170+(300*x)-cameraX*scroll6, 80, 160+(300*x)-cameraX*scroll6, 50);
      strokeWeight(8);
      line(200+(300*x)-cameraX*scroll6, 130, 250+(300*x)-cameraX*scroll6, 50);
      strokeWeight(9);
      line(200+(300*x)-cameraX*scroll6, 160, 240+(300*x)-cameraX*scroll6, 130);
      line(240+(300*x)-cameraX*scroll6, 130, 280+(300*x)-cameraX*scroll6, 50);
      strokeWeight(10);
      line(430+(300*x)-cameraX*scroll6, 180, 405+(300*x)-cameraX*scroll6, 170);
      line(405+(300*x)-cameraX*scroll6, 170, 380+(300*x)-cameraX*scroll6, 50);
      line(385+(300*x)-cameraX*scroll6, 90, 365+(300*x)-cameraX*scroll6, 85);
      line(365+(300*x)-cameraX*scroll6, 85, 350+(300*x)-cameraX*scroll6, 50);
      line(450+(300*x)-cameraX*scroll6, 150, 480+(300*x)-cameraX*scroll6, 140);
      line(480+(300*x)-cameraX*scroll6, 140, 490+(300*x)-cameraX*scroll6, 50);
      line(485+(300*x)-cameraX*scroll6, 100, 520+(300*x)-cameraX*scroll6, 50);
      line(610+(300*x)-cameraX*scroll6, 160, 540+(300*x)-cameraX*scroll6, 50);
      line(570+(300*x)-cameraX*scroll6, 85, 590+(300*x)-cameraX*scroll6, 50);
      line(630+(300*x)-cameraX*scroll6, 120, 640+(300*x)-cameraX*scroll6, 100);
      fill(#3E3E3E); //tree leaves 2
      noStroke();
      ellipse(20+(300*x)-cameraX*scroll6, 40, 45, 40);
      ellipse(40+(300*x)-cameraX*scroll6, 30, 45, 40);
      ellipse(60+(300*x)-cameraX*scroll6, 40, 45, 40);
      ellipse(80+(300*x)-cameraX*scroll6, 30, 45, 40);
      ellipse(100+(300*x)-cameraX*scroll6, 40, 45, 40);
      ellipse(120+(300*x)-cameraX*scroll6, 40, 45, 40);
      ellipse(140+(300*x)-cameraX*scroll6, 50, 45, 40);
      ellipse(160+(300*x)-cameraX*scroll6, 30, 45, 40);
      ellipse(180+(300*x)-cameraX*scroll6, 40, 45, 40);
      ellipse(200+(300*x)-cameraX*scroll6, 30, 45, 40);
      ellipse(220+(300*x)-cameraX*scroll6, 50, 45, 40);
      ellipse(240+(300*x)-cameraX*scroll6, 30, 45, 40);
      ellipse(260+(300*x)-cameraX*scroll6, 40, 45, 40);
      ellipse(280+(300*x)-cameraX*scroll6, 30, 45, 40);
      ellipse(300+(300*x)-cameraX*scroll6, 40, 45, 40);
      ellipse(320+(300*x)-cameraX*scroll6, 40, 45, 40);
      ellipse(340+(300*x)-cameraX*scroll6, 50, 45, 40);
      ellipse(360+(300*x)-cameraX*scroll6, 30, 45, 40);
      ellipse(380+(300*x)-cameraX*scroll6, 40, 45, 40);
      ellipse(480+(300*x)-cameraX*scroll6, 30, 45, 40);
      ellipse(500+(300*x)-cameraX*scroll6, 40, 45, 40);
      ellipse(420+(300*x)-cameraX*scroll6, 40, 45, 40);
      ellipse(440+(300*x)-cameraX*scroll6, 50, 45, 40);
      ellipse(460+(300*x)-cameraX*scroll6, 30, 45, 40);
      ellipse(580+(300*x)-cameraX*scroll6, 40, 45, 40);
      ellipse(580+(300*x)-cameraX*scroll6, 30, 45, 40);
      ellipse(600+(300*x)-cameraX*scroll6, 40, 45, 40);
      ellipse(520+(300*x)-cameraX*scroll6, 40, 45, 40);
      ellipse(540+(300*x)-cameraX*scroll6, 50, 45, 40);
      ellipse(560+(300*x)-cameraX*scroll6, 30, 45, 40);
      ellipse(580+(300*x)-cameraX*scroll6, 40, 45, 40);
      ellipse(600+(300*x)-cameraX*scroll6, 30, 45, 40);
      ellipse(620+(300*x)-cameraX*scroll6, 40, 45, 40);
      ellipse(640+(300*x)-cameraX*scroll6, 50, 45, 40);
      ellipse(660+(300*x)-cameraX*scroll6, 30, 45, 40);
      fill(#4D4D4C);
      noStroke();
      ellipse(-10+(300*x)-cameraX*scroll6, 20, 50, 45);
      ellipse(20+(300*x)-cameraX*scroll6, 10, 50, 45);
      ellipse(40+(300*x)-cameraX*scroll6, 20, 50, 45);
      ellipse(60+(300*x)-cameraX*scroll6, 10, 50, 45);
      ellipse(80+(300*x)-cameraX*scroll6, 20, 50, 45);
      ellipse(100+(300*x)-cameraX*scroll6, 20, 50, 45);
      ellipse(120+(300*x)-cameraX*scroll6, 30, 50, 45);
      ellipse(140+(300*x)-cameraX*scroll6, 10, 50, 45);
      ellipse(160+(300*x)-cameraX*scroll6, 20, 50, 45);
      ellipse(180+(300*x)-cameraX*scroll6, 10, 50, 45);
      ellipse(200+(300*x)-cameraX*scroll6, 30, 50, 45);
      ellipse(220+(300*x)-cameraX*scroll6, 10, 50, 45);
      ellipse(240+(300*x)-cameraX*scroll6, 20, 50, 45);
      ellipse(260+(300*x)-cameraX*scroll6, 10, 50, 45);
      ellipse(280+(300*x)-cameraX*scroll6, 20, 50, 45);
      ellipse(300+(300*x)-cameraX*scroll6, 20, 50, 45);
      ellipse(320+(300*x)-cameraX*scroll6, 30, 50, 45);
      ellipse(340+(300*x)-cameraX*scroll6, 10, 50, 45);
      ellipse(360+(300*x)-cameraX*scroll6, 20, 50, 45);
      ellipse(460+(300*x)-cameraX*scroll6, 10, 50, 45);
      ellipse(480+(300*x)-cameraX*scroll6, 20, 50, 45);
      ellipse(400+(300*x)-cameraX*scroll6, 20, 50, 45);
      ellipse(420+(300*x)-cameraX*scroll6, 30, 50, 45);
      ellipse(440+(300*x)-cameraX*scroll6, 10, 50, 45);
      ellipse(560+(300*x)-cameraX*scroll6, 20, 50, 45);
      ellipse(560+(300*x)-cameraX*scroll6, 10, 50, 45);
      ellipse(580+(300*x)-cameraX*scroll6, 20, 50, 45);
      ellipse(500+(300*x)-cameraX*scroll6, 20, 50, 45);
      ellipse(520+(300*x)-cameraX*scroll6, 30, 50, 45);
      ellipse(540+(300*x)-cameraX*scroll6, 10, 50, 45);
      ellipse(560+(300*x)-cameraX*scroll6, 20, 50, 45);
      ellipse(580+(300*x)-cameraX*scroll6, 10, 50, 45);
      ellipse(600+(300*x)-cameraX*scroll6, 20, 50, 45);
      ellipse(620+(300*x)-cameraX*scroll6, 30, 50, 45);
      ellipse(640+(300*x)-cameraX*scroll6, 10, 50, 45);
      ellipse(340+(300*x)-cameraX*scroll6, 0, 640, 10);
    }
  }
}


/////////////////////Space Background
int FadeX = 255;